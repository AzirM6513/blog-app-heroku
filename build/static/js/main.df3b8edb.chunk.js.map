{"version":3,"sources":["components/LoginForm.js","components/Blog.js","components/Blogs.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["LoginForm","loginObj","handleLogin","username","password","setUsername","setPassword","onSubmit","className","type","value","name","onChange","target","Blog","blog","title","author","Blogs","blogs","user","handleLogout","onClick","map","id","baseUrl","token","getAll","axios","get","then","res","data","setToken","newToken","create","newObject","a","config","headers","Authorization","post","login","credentials","App","useState","setBlogs","setTitle","url","setUrl","setAuthor","setUser","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","event","preventDefault","loginService","setItem","stringify","console","log","handleTitleChange","handleAuthorChange","handleUrlChange","addBlog","blogObject","returnedBlog","concat","removeItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df3b8edb.chunk.js","sourcesContent":["import React from 'react';\n\nconst LoginForm = ({ loginObj }) => {\n  // fixme: should destructure in function params\n  const {\n    handleLogin,\n    username,\n    password,\n    setUsername,\n    setPassword,\n  } = loginObj;\n  return (\n    <div>\n      <h2>login to application</h2>\n      <form onSubmit={handleLogin}>\n        <div>\n          username\n          <input\n            className='login'\n            type='text'\n            value={username}\n            name='Username'\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n          <input\n            className='login'\n            type='password'\n            value={password}\n            name='Password'\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type='submit'>login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nconst Blog = ({ blog }) => (\n  <li>\n    {blog.title} {blog.author}\n  </li>\n);\n\nexport default Blog;\n","import React from 'react';\nimport Blog from './Blog';\n\nconst Blogs = ({ blogs, user, handleLogout }) => {\n  return (\n    <div>\n      <h2>Blogs</h2>\n      <p className='username-p'>{user.name} logged-in</p>\n      <button onClick={handleLogout}>logout</button>\n      <ul>\n        {blogs.map((blog) => (\n          <Blog key={blog.id} blog={blog} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Blogs;\n","import axios from 'axios';\n\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const req = axios.get(baseUrl);\n  return req.then((res) => res.data);\n};\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n\n  const res = await axios.post(baseUrl, newObject, config);\n  return res.data;\n};\n\nexport default { getAll, setToken, create };\n","import axios from 'axios';\n\nconst baseUrl = '/api/login';\n\nconst login = async (credentials) => {\n  const res = await axios.post(baseUrl, credentials);\n  return res.data;\n};\n\nexport default { login };\n","import React, { useState, useEffect } from 'react';\n\nimport LoginForm from './components/LoginForm';\nimport Blogs from './components/Blogs';\n\nimport blogService from './services/blogs';\nimport loginService from './services/login';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [title, setTitle] = useState('');\n  const [url, setUrl] = useState('');\n  const [author, setAuthor] = useState('');\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs));\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      });\n\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user));\n\n      blogService.setToken(user.token);\n\n      setUser(user);\n\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      console.log('Wrong credentials');\n    }\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    blogService.setToken(null);\n\n    window.localStorage.removeItem('loggedBlogAppUser');\n  };\n\n  const handleTitleChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n  const handleAuthorChange = (event) => {\n    setAuthor(event.target.value);\n  };\n\n  const handleUrlChange = (event) => {\n    setUrl(event.target.value);\n  };\n\n  const addBlog = async (event) => {\n    event.preventDefault();\n    const blogObject = {\n      title: title,\n      author: author || user.name,\n      url: url,\n    };\n\n    const returnedBlog = await blogService.create(blogObject);\n    setBlogs(blogs.concat(returnedBlog));\n\n    setAuthor('');\n    setTitle('');\n    setUrl('');\n  };\n\n  const loginObj = {\n    handleLogin,\n    username,\n    password,\n    setUsername,\n    setPassword,\n  };\n\n  const blogForm = () => (\n    <div>\n      <h2>create new</h2>\n      <form onSubmit={addBlog}>\n        <div>\n          <p className='blog-form-label'>title:</p>\n          <input type='text' value={title} onChange={handleTitleChange} />\n        </div>\n\n        <div>\n          <p className='blog-form-label'>author:</p>\n          <input type='text' value={author} onChange={handleAuthorChange} />\n        </div>\n\n        <div>\n          <p className='blog-form-label'>url:</p>\n          <input type='text' value={url} onChange={handleUrlChange} />\n        </div>\n\n        <button type='submit'>create</button>\n      </form>\n    </div>\n  );\n\n  return (\n    <div>\n      {user === null ? (\n        <LoginForm loginObj={loginObj} />\n      ) : (\n        <div>\n          <Blogs blogs={blogs} user={user} handleLogout={handleLogout} />\n          {blogForm()}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}