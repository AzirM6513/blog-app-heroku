{"version":3,"sources":["components/Error.js","components/LoginForm.js","services/users.js","components/Blog.js","components/Togglable.js","components/BlogForm.js","components/Notification.js","components/Blogs.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Error","message","className","LoginForm","login","errorMessage","useState","username","setUsername","password","setPassword","handleLogin","event","a","preventDefault","onSubmit","type","value","name","onChange","target","getUserById","userId","axios","get","res","data","Blog","blog","showDetails","hasOwnProperty","userService","user","title","author","url","likes","Togglable","props","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","onClick","buttonLabel","children","BlogForm","createBlog","setTitle","setAuthor","setUrl","addBlog","Notification","Blogs","blogs","handleLogout","map","id","baseUrl","token","getAll","then","setToken","newToken","create","newObject","config","headers","Authorization","post","credentials","App","setBlogs","setErrorMessage","setUser","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","loginService","setItem","stringify","setTimeout","returnedBlog","concat","removeItem","ReactDOM","render","document","getElementById"],"mappings":"0NAUeA,EARD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OAAgB,OAAZA,EACK,KAGF,oBAAIC,UAAU,wBAAd,SAAuCD,KCwCjCE,EA5CG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aAAmB,EACbC,mBAAS,IADI,mBACtCC,EADsC,KAC5BC,EAD4B,OAEbF,mBAAS,IAFI,mBAEtCG,EAFsC,KAE5BC,EAF4B,KAIvCC,EAAW,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDAClBD,EAAME,iBAENV,EAAMG,EAAUE,GAEhBD,EAAY,IACZE,EAAY,IANM,2CAAH,sDASjB,OACE,gCACE,sDACA,cAAC,EAAD,CAAOT,QAASI,IAChB,uBAAMU,SAAUJ,EAAhB,UACE,2CAEE,uBACET,UAAU,QACVc,KAAK,OACLC,MAAOV,EACPW,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBZ,EAAYY,EAAOH,aAGjD,2CAEE,uBACEf,UAAU,QACVc,KAAK,WACLC,MAAOR,EACPS,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBV,EAAYU,EAAOH,aAGjD,wBAAQD,KAAK,SAAb,0B,gBChCO,GAAEK,YALA,uCAAG,WAAOC,GAAP,eAAAT,EAAA,sEACAU,IAAMC,IAAN,UAHJ,aAGI,YAAwBF,IADxB,cACZG,EADY,yBAEXA,EAAIC,MAFO,2CAAH,uDC8BFC,EA/BF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACatB,oBAAS,GADtB,mBAClBuB,EADkB,KAErBtB,GAFqB,KAEV,MAMf,OAJIqB,EAAKE,eAAe,UACtBvB,EAAWwB,EAAYV,YAAYO,EAAKI,MAAMzB,UAG5CsB,EAEA,qBAAI3B,UAAU,6CAAd,UACE,+BACG0B,EAAKK,MADR,IACgBL,EAAKM,UAErB,6BAAKN,EAAKO,MACV,wCACSP,EAAKQ,MACZ,6CAEF,6BAAK7B,GAAYqB,EAAKM,YAM1B,+BACGN,EAAKK,MADR,IACgBL,EAAKM,WCJVG,EAvBG,SAACC,GAAW,IAAD,EACGhC,oBAAS,GADZ,mBACpBiC,EADoB,KACXC,EADW,KAGrBC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5CK,EAAmB,WACvBJ,GAAYD,IAGd,OACE,gCACE,qBAAKM,MAAOJ,EAAZ,SACE,wBAAQK,QAASF,EAAjB,SAAoCN,EAAMS,gBAE5C,sBAAKF,MAAOF,EAAZ,UACGL,EAAMU,SACP,wBAAQF,QAASF,EAAjB,2BCyCOK,EAzDE,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACT5C,mBAAS,IADA,mBAC5B2B,EAD4B,KACrBkB,EADqB,OAEP7C,mBAAS,IAFF,mBAE5B4B,EAF4B,KAEpBkB,EAFoB,OAGb9C,mBAAS,IAHI,mBAG5B6B,EAH4B,KAGvBkB,EAHuB,KAK7BC,EAAO,uCAAG,WAAO1C,GAAP,SAAAC,EAAA,sDACdD,EAAME,iBAONoC,EANmB,CACjBjB,MAAOA,EACPC,OAAQA,EACRC,IAAKA,IAKPiB,EAAU,IACVD,EAAS,IACTE,EAAO,IAZO,2CAAH,sDAeb,OACE,eAAC,EAAD,CAAWN,YAAY,kBAAvB,UACE,4CACA,uBAAMhC,SAAUuC,EAAhB,UACE,gCACE,mBAAGpD,UAAU,kBAAb,oBACA,uBACEc,KAAK,OACLC,MAAOgB,EACPd,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB+B,EAAS/B,EAAOH,aAI9C,gCACE,mBAAGf,UAAU,kBAAb,qBACA,uBACEc,KAAK,OACLC,MAAOiB,EACPf,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBgC,EAAUhC,EAAOH,aAI/C,gCACE,mBAAGf,UAAU,kBAAb,kBACA,uBACEc,KAAK,OACLC,MAAOkB,EACPhB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBiC,EAAOjC,EAAOH,aAI5C,wBAAQD,KAAK,SAAb,2BC5COuC,EARM,SAAC,GAAiB,IAAftD,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGF,oBAAIC,UAAU,0BAAd,SAAyCD,KCgBnCuD,EAjBD,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,MAAOzB,EAAgD,EAAhDA,KAAM0B,EAA0C,EAA1CA,aAAcrD,EAA4B,EAA5BA,aAAciD,EAAc,EAAdA,QACxD,OACE,gCACE,uCACA,cAAC,EAAD,CAAcrD,QAASI,IACvB,oBAAGH,UAAU,aAAb,UAA2B8B,EAAKd,KAAhC,gBACA,wBAAQ4B,QAASY,EAAjB,oBACA,cAAC,EAAD,CAAUR,WAAYI,IACtB,6BACGG,EAAME,KAAI,SAAC/B,GAAD,OACT,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKgC,aCdpBC,EAAU,aACZC,EAAQ,KAoBG,GAAEC,OAdF,WAEb,OADYxC,IAAMC,IAAIqC,GACXG,MAAK,SAACvC,GAAD,OAASA,EAAIC,SAYNuC,SAlBR,SAACC,GAChBJ,EAAK,iBAAaI,IAiBeC,OATvB,uCAAG,WAAOC,GAAP,iBAAAvD,EAAA,6DACPwD,EAAS,CACbC,QAAS,CAAEC,cAAeT,IAFf,SAKKvC,IAAMiD,KAAKX,EAASO,EAAWC,GALpC,cAKP5C,EALO,yBAMNA,EAAIC,MANE,2CAAH,uDCLG,GAAEtB,MALN,uCAAG,WAAOqE,GAAP,eAAA5D,EAAA,sEACMU,IAAMiD,KAHV,aAGwBC,GAD1B,cACNhD,EADM,yBAELA,EAAIC,MAFC,2CAAH,uDCwFIgD,EApFH,WAAO,IAAD,EACUpE,mBAAS,IADnB,mBACTmD,EADS,KACFkB,EADE,OAEwBrE,mBAAS,MAFjC,mBAETD,EAFS,KAEKuE,EAFL,OAIQtE,mBAAS,MAJjB,mBAIT0B,EAJS,KAIH6C,EAJG,KAMhBC,qBAAU,WACRC,EAAYhB,SAASC,MAAK,SAACP,GAAD,OAAWkB,EAASlB,QAC7C,IAEHqB,qBAAU,WACR,IAAME,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAClB,IAAMhD,EAAOoD,KAAKC,MAAML,GACxBH,EAAQ7C,GAER+C,EAAYd,SAASjC,EAAK8B,UAE3B,IAEH,IAAMnD,EAAW,uCAAG,WAAOJ,EAAUE,GAAjB,eAAAI,EAAA,+EAEGyE,EAAalF,MAAM,CACpCG,WACAE,aAJc,OAEVuB,EAFU,OAOhBiD,OAAOC,aAAaK,QAAQ,oBAAqBH,KAAKI,UAAUxD,IAEhE+C,EAAYd,SAASjC,EAAK8B,OAE1Be,EAAQ7C,GAXQ,gDAahB4C,EAAgB,8BAChBa,YAAW,WACTb,EAAgB,QACf,KAhBa,yDAAH,wDA2BXtB,EAAO,uCAAG,WAAO1B,GAAP,eAAAf,EAAA,4DACM,KAAhBe,EAAKM,SACPN,EAAKM,OAASF,EAAKd,MAFP,SAKa6D,EAAYZ,OAAOvC,GALhC,OAKR8D,EALQ,OAMdf,EAASlB,EAAMkC,OAAOD,IAEtBd,EAAgB,eAAD,OACEc,EAAazD,MADf,gBAC4ByD,EAAaxD,OADzC,WAGfuD,YAAW,WACTb,EAAgB,QACf,KAbW,2CAAH,sDAgBb,OACE,8BACY,OAAT5C,EACC,8BACE,cAAC,EAAD,CAAW5B,MAAOO,EAAaN,aAAcA,MAG/C,8BACE,cAAC,EAAD,CACEoD,MAAOA,EACPzB,KAAMA,EACN0B,aAlCW,WACnBmB,EAAQ,MACRE,EAAYd,SAAS,MAErBgB,OAAOC,aAAaU,WAAW,sBA+BvBvF,aAAcA,EACdiD,QAASA,S,MC/ErBuC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ab9605df.chunk.js","sourcesContent":["import React from 'react';\n\nconst Error = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <h3 className='message error-message'>{message}</h3>;\n};\n\nexport default Error;\n","import React, { useState } from 'react';\nimport Error from './Error';\n\nconst LoginForm = ({ login, errorMessage }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n\n    login(username, password);\n\n    setUsername('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h2>login to application</h2>\n      <Error message={errorMessage} />\n      <form onSubmit={handleLogin}>\n        <div>\n          username\n          <input\n            className='login'\n            type='text'\n            value={username}\n            name='Username'\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n          <input\n            className='login'\n            type='password'\n            value={password}\n            name='Password'\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type='submit'>login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import axios from 'axios';\n\nconst baseUrl = '/api/users';\n\nconst getUserById = async (userId) => {\n  const res = await axios.get(`${baseUrl}/${userId}`);\n  return res.data;\n};\n\nexport default { getUserById };\n","import React, { useState } from 'react';\nimport userService from '../services/users';\n\nconst Blog = ({ blog }) => {\n  const [showDetails, setShowDetails] = useState(true);\n  let username = null;\n\n  if (blog.hasOwnProperty('user')) {\n    username = userService.getUserById(blog.user).username;\n  }\n\n  if (showDetails) {\n    return (\n      <ul className='margin-bottom slim-black-border ul-padding'>\n        <li>\n          {blog.title} {blog.author}\n        </li>\n        <li>{blog.url}</li>\n        <li>\n          likes {blog.likes}\n          <button>like</button>\n        </li>\n        <li>{username || blog.author}</li>\n      </ul>\n    );\n  }\n\n  return (\n    <li>\n      {blog.title} {blog.author}\n    </li>\n  );\n};\n\nexport default Blog;\n","import React, { useState } from 'react';\n\nconst Togglable = (props) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Togglable;\n","import React, { useState } from 'react';\nimport Togglable from './Togglable';\n\nconst BlogForm = ({ createBlog }) => {\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [url, setUrl] = useState('');\n\n  const addBlog = async (event) => {\n    event.preventDefault();\n    const blogObject = {\n      title: title,\n      author: author,\n      url: url,\n    };\n\n    createBlog(blogObject);\n\n    setAuthor('');\n    setTitle('');\n    setUrl('');\n  };\n\n  return (\n    <Togglable buttonLabel='create new blog'>\n      <h2>create new</h2>\n      <form onSubmit={addBlog}>\n        <div>\n          <p className='blog-form-label'>title:</p>\n          <input\n            type='text'\n            value={title}\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n\n        <div>\n          <p className='blog-form-label'>author:</p>\n          <input\n            type='text'\n            value={author}\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n\n        <div>\n          <p className='blog-form-label'>url:</p>\n          <input\n            type='text'\n            value={url}\n            onChange={({ target }) => setUrl(target.value)}\n          />\n        </div>\n\n        <button type='submit'>create</button>\n      </form>\n    </Togglable>\n  );\n};\n\nexport default BlogForm;\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <h3 className='message success-message'>{message}</h3>;\n};\n\nexport default Notification;\n","import React from 'react';\n\nimport Blog from './Blog';\nimport BlogForm from './BlogForm';\nimport Notification from './Notification';\n\nconst Blogs = ({ blogs, user, handleLogout, errorMessage, addBlog }) => {\n  return (\n    <div>\n      <h2>Blogs</h2>\n      <Notification message={errorMessage} />\n      <p className='username-p'>{user.name} logged-in</p>\n      <button onClick={handleLogout}>logout</button>\n      <BlogForm createBlog={addBlog} />\n      <ul>\n        {blogs.map((blog) => (\n          <Blog key={blog.id} blog={blog} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Blogs;\n","import axios from 'axios';\n\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const req = axios.get(baseUrl);\n  return req.then((res) => res.data);\n};\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n\n  const res = await axios.post(baseUrl, newObject, config);\n  return res.data;\n};\n\nexport default { getAll, setToken, create };\n","import axios from 'axios';\n\nconst baseUrl = '/api/login';\n\nconst login = async (credentials) => {\n  const res = await axios.post(baseUrl, credentials);\n  return res.data;\n};\n\nexport default { login };\n","import React, { useState, useEffect } from 'react';\n\nimport LoginForm from './components/LoginForm';\nimport Blogs from './components/Blogs';\n\nimport blogService from './services/blogs';\nimport loginService from './services/login';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs));\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async (username, password) => {\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      });\n\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user));\n\n      blogService.setToken(user.token);\n\n      setUser(user);\n    } catch (exception) {\n      setErrorMessage('Wrong Username or Password');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    blogService.setToken(null);\n\n    window.localStorage.removeItem('loggedBlogAppUser');\n  };\n\n  const addBlog = async (blog) => {\n    if (blog.author === '') {\n      blog.author = user.name;\n    }\n\n    const returnedBlog = await blogService.create(blog);\n    setBlogs(blogs.concat(returnedBlog));\n\n    setErrorMessage(\n      `a new blog '${returnedBlog.title}' by ${returnedBlog.author} added`\n    );\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 5000);\n  };\n\n  return (\n    <div>\n      {user === null ? (\n        <div>\n          <LoginForm login={handleLogin} errorMessage={errorMessage} />\n        </div>\n      ) : (\n        <div>\n          <Blogs\n            blogs={blogs}\n            user={user}\n            handleLogout={handleLogout}\n            errorMessage={errorMessage}\n            addBlog={addBlog}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}